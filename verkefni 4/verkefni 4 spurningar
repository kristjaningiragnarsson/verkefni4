verkefni 4
1. hver er munurinn á mysqli og pdo
Database support: PDO er með 12 drivera meðan MySQLi er bara með MySQL
API: PDO er bara með OOP meðan MySQLi er með OPP og procedural
Named parameters: PDO er með, MySQLi er ekki með
þú getur gert prepared statements frá client side í PDO en ekki í MySQLi

2) Til hvers eru færubreyturnar (e. parameter) í kóðanum?
$connection = new PDO('mysql:host=localhost;dbname=mydb;charset=utf8',
'root', 'root');

til þess að tengja við serverinn.

3) Útskýrðu $connection->exec(); aðferðina. Til hvers er hún og hverju skilar hún (e.
return), komdu með dæmi.
exec runnar queries t.d. 
$connection->exec('INSERT INTO users VALUES (1, "somevalue"')

4)Útskýrðu $connection->query(); aðferðina. Til hvers er hún og hverju skilar hún (e.
return), komdu með dæmi.

foreach($connection->query('SELECT * FROM users') as $row) {
    echo $row['id'] . ' ' . $row['name'];
}

5) Hvað er PDOStatement class? Útskýrðu hvernig hann tengist PDO class í notkun.
T.d. ef þú notar PDO::FETCH_ASSOC skilar röð ($row) með dálkaheiti fyrir index. Dæmi
$row['id'] bendir á id dálk. $row er þá röð í töflunni users úr gagnagrunni.
$statement = $connection->query('SELECT * FROM users');
while($row = $statement->fetch(PDO::FETCH_ASSOC)) {
 echo $row['id'] . ' ' . $row['name'];
}

6) Hverju skilar PDO::FETCH_NUM ? 

skilar array indexed með column number t.d.
$row['0']
7) Hverju skilar PDO::FETCH_CLASS ?

returns a new instance of the requested class, mapping the columns of the result set to named properties in the class.

8) Útskýrðu hvað eftirfarandi kóði gerir og hverju hann skilar:

$sth = $dbh->prepare("SELECT name, colour FROM fruit");
$sth->execute();
$result = $sth->fetchColumn(1);
kóðinn notar prepare til að selecta name , color frá fruit og svo executar það command með $sth->execute();
svo nær hann í colunum 1

9) Til hver er $connection->prepare() og parameter binding notað?
bind er notað til að setja value í prepared aðfreðina

10) Hvað gerir bindValue() aðferðin í eftirfarandi kóða? og hvers vegna er það gagnlegt?
?php
/* Execute a prepared statement by binding PHP variables */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
 FROM fruit
 WHERE calories < :calories AND colour = :colour');
$sth->bindValue(':calories', $calories, PDO::PARAM_INT);
$sth->bindValue(':colour', $colour, PDO::PARAM_STR);
$sth->execute();
?>
bindvalue tekur við aðferðina sem notaði prepared